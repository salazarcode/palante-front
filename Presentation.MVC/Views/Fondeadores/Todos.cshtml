
@{
    ViewData["Title"] = "Fondeadores";
}

    <div id="app">
        <input type="hidden" id="endpoint" name="endpoint" value="@ViewBag.endpoint" />
        <div class="container">
            <div class="row">
                <div class="col-md-2">
                    <h4>Fondeadores:</h4>
                    <a href="/Fondeadores/Nuevo">
                        <button class="btn btn-primary">Crear Fondeador</button>
                    </a>
                </div>
                <div class="col-md-10">
                    <h3 v-if="fondeadores.length == 0">Cargando datos...</h3>
                    <div v-for="fondeador in fondeadores">
                        <div class="card">
                            <div class="card-header">
                                {{fondeador.nombre}}
                            </div>
                            <div class="card-body">
                                <p class="card-text"></p>
                                <a href="#" class="btn btn-warning" @@click="EliminarFondeador(fondeador.fondeadorID)">Eliminar</a>
                            </div>
                        </div>
                        <br />
                    </div>

                </div>
            </div>
        </div>

    </div>

@section Scripts{

    <script>
        var vm = new Vue({
            el: '#app',
            data: {
                fondeadores: [],
                api: ""
            },
            methods: {
                formatMoney: function (num) {
                    return (num.toFixed(2) // always two decimal digits
                        .replace('.', ',') // replace decimal point character with ,
                        .replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1.')
                    )
                },
                EliminarFondeador: async function (ID) {
                    let res = await fetch(this.api + "Fondeador/Delete?FondeadorID=" + ID)
                        .then(response => response.json());

                    if (res != 0)
                        alert("Se eliminó exitosamente");

                    this.cargarFondeadores();
                },
                fecha: function (date) {
                    return moment(date).format("DD/MM/YYYY")
                },
                cargarFondeadores: async function () {
                    this.fondeadores = [];
                    this.fondeadores = await fetch(this.api + "fondeador/All").then(x => x.json());
                }
            },
            computed: {
            },
            async mounted() {
                this.api = $("#endpoint").val();
                this.cargarFondeadores();
            }
        });

    </script>

}