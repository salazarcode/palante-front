@{
    ViewData["Title"] = "Reprogramar";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<div id="app">
    <input type="hidden" id="endpoint" name="endpoint" value="@ViewBag.endpoint" />
    
    <div class="container">
        <div class="row">
            <div class="col-md-10">
                <table class="table table-hover table-bordered table-sm" style="font-size:10pt">
                    <thead>
                        <tr>
                            <th>CreditoID</th>
                            <th>Cuotas Totales</th>
                            <th>Nro. de Cuota</th>
                            <th>Monto</th>
                            <th>Disponible Usuario</th>
                            <th>Fecha Vencimiento</th>
                            <th>Cuenta Por Cobrar</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(c, index) in cuotasFiltradas" @@click="seleccionar($event, index)">
                            <td>{{c.nCodCred}}</td>
                            <td>{{c.nNroCuotas}}</td>
                            <td>{{c.nNroCuota}}</td>
                            <td>{{c.monto.toFixed(2)}}</td>
                            <td>{{c.disponible}}</td>
                            <td>{{GetDate(c.dFecVcto)}}</td>
                            <td>{{c.cuentaPorCobrar.toFixed(2)}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-md-2">
                <label for="total">Total</label>
                <input type="text" class="form-control" name="total" :value="total" />
                <br />
                <button class="btn btn-success btn-sm" data-toggle="modal" data-target="#confirmarGuardar">Guardar</button>
            </div>
        </div>

    </div>



    <div class="modal fade" id="confirmarGuardar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Confirmación</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Confirmas que deseas guardar del pago de total <b>{{total}}</b>, integrado por las cuotas: </p>
                    <ul>
                        <li v-for="c in cuotasFiltradas.filter(x=>x.selected)">
                        <b>ID:</b> 
                        {{c.nCodCred}} - 
                        <b>Cuota Nro.:</b> 
                        {{c.nNroCuota}} - 
                        <b>Monto:</b> 
                        {{c.monto.toFixed(2)}}</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" @@click="guardar" data-dismiss="modal">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>
        var vm = new Vue({
            el: '#app',
            data: {
                cuotas: [],
                cuotasFiltradas: [],
                api: "",
                pagos: [],
                total: 0,
                pago: {
                    pagoID: "",
                    fechaCreacion: "",
                    fechaModificacion: "",
                    fechaConfirmacion: "",
                    monto: "",
                    cuotas: [],
                    confirmed: false
                },
                detalle: ""
            },
            methods: {
                seleccionar: function (event, index) {
                    $(event.target).parent().toggleClass("table-primary");
                    this.cuotasFiltradas[index].selected = !this.cuotasFiltradas[index].selected;
                    this.total = this.sumatoria().toFixed(2);
                },
                GetDate: function (strDate) {
                    return moment(strDate).format("DD-MM-YYYY");
                },
                sumatoria: function () {
                    let res = 0;
                    this.cuotasFiltradas.filter(x => x.selected).forEach(x => {
                        res += x.monto;
                    });
                    return res;
                },
                guardar: function () {
                    this.pago.pagoID = Math.floor(Math.random() * 9999) + 1000;
                    this.cuotasFiltradas.filter(x => x.selected).forEach(ele => vm.pago.cuotas.push(ele));
                    this.pago.fechaCreacion = moment().format("YYYYMMDD");
                    this.pago.fechaModificacion = moment().format("YYYYMMDD");
                    this.pago.fechaConfirmacion = "";
                    this.pago.monto = this.total;
                    this.pago.confirmed = false;

                    this.pagos.push(this.pago);

                    window.localStorage.setItem("pagos", JSON.stringify(this.pagos));
                    window.location.href = "@(ViewBag.domain+"Pagos")"
                },
                random: function (min, max) {
                    return Math.floor(Math.random() * max) + min;
                }
            },
            async mounted() {
                this.api = $("#endpoint").val();

                this.cuotas = [
                    {
                        nCodCred: 132452,
                        nNroCuota: this.random(1, 60),
                        nNroCuotas: this.random(1, 60),
                        monto: 652.22,
                        disponible: 652.22,
                        dFecVcto: new Date(),
                        cuentaPorCobrar: 0
                    },
                    {
                        nCodCred: 132452,
                        nNroCuota: this.random(1, 60),
                        nNroCuotas: this.random(1, 60),
                        monto: this.random(200, 500),
                        disponible: this.random(0, 500).toFixed(2),
                        dFecVcto: new Date(),
                        cuentaPorCobrar: 0,
                        vencida: false,
                        corriente: false,
                        futura: false
                    },
                    {
                        nCodCred: 132452,
                        nNroCuota: this.random(1, 60),
                        nNroCuotas: this.random(1, 60),
                        monto: 200.84,
                        disponible: 200.84,
                        dFecVcto: new Date(),
                        cuentaPorCobrar: 0,
                        vencida: false,
                        corriente: false,
                        futura: false
                    },
                    {
                        nCodCred: 132452,
                        nNroCuota: this.random(1, 60),
                        nNroCuotas: this.random(1, 60),
                        monto: 300.32,
                        disponible: 300.32,
                        dFecVcto: new Date(),
                        cuentaPorCobrar: 0,
                        vencida: false,
                        corriente: false,
                        futura: false
                    },
                    {
                        nCodCred: 132452,
                        nNroCuota: this.random(1, 60),
                        nNroCuotas: this.random(1, 60),
                        monto: this.random(200, 500),
                        disponible: this.random(0, 500).toFixed(2),
                        dFecVcto: new Date(),
                        cuentaPorCobrar: 0,
                        vencida: false,
                        corriente: false,
                        futura: false
                    },
                    {
                        nCodCred: 132452,
                        nNroCuota: this.random(1, 60),
                        nNroCuotas: this.random(1, 60),
                        monto: this.random(200, 500),
                        disponible: this.random(0, 500).toFixed(2),
                        dFecVcto: new Date(),
                        cuentaPorCobrar: 0,
                        vencida: false,
                        corriente: false,
                        futura: false
                    }
                ]

                this.cuotasFiltradas = this.cuotas;
                this.cuotas.forEach(x => {
                    x.selected = false;
                });

                this.pagos = JSON.parse(localStorage.getItem("pagos"));
            }
        });

    </script>

}