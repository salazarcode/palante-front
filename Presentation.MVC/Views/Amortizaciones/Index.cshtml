@{
    ViewData["Title"] = "Amortizaciones";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
    <div class="container" id="app">
        <input type="hidden" id="endpoint" name="endpoint" value="@ViewBag.endpoint" />
        <div class="row">
            <div class="col-md-3">
                <button class="btn btn-primary btn-sm" @@click="crear">Nueva</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-10">
                <table class="table table-hover table-bordered table-sm" style="margin-top:20px">
                    <thead>
                        <tr>
                            <th>AmortID</th>
                            <th>Nro. Calen.</th>
                            <th>Capital</th>
                            <th>Total</th>
                            <th>Credito</th>
                            <th>Total</th>
                            <th>Confirmacion</th>
                            <th colspan="4">Opciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(a, index) in amortizaciones"
                            :class="{'table-primary':(new Date(a.confirmacion)).getFullYear() != 1 }">
                            <td>{{a.amortizacionID}}</td>
                            <td>{{a.nroCalendarioCOF}}</td>
                            <td>{{a.capital}}</td>
                            <td>{{a.total}}</td>
                            <td>{{a.nCodCred}}</td>
                            <td>{{a.total}}</td>
                            <td>{{(new Date(a.confirmacion)).getFullYear() != 1 ? GetDate(a.confirmacion) : "No Confirmado"}}</td>
                            <td><a href="#" @@click="eliminar(index)">Eliminar</a></td>
                            <td><a href="#" @@click="confirmar(index)">Confirmar</a></td>
                            <td><a href="#" @@click="CronogramaCOF(index)">Cronograma</a></td>
                            <td>
                                <a href="#"
                                   data-toggle="modal"
                                   data-target="#modalDetalle"
                                   @@click="amortizacion = amortizaciones[index]">Detalle</a>
                            </td>


                        </tr>
                    </tbody>
                </table>
            </div>

        </div>

        <div class="modal fade" id="modalDetalle" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Cronograma COF</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table class="table table-bordered table-hover table-sm">
                            <tr>
                                <td class="table-primary">Tasa</td>
                                <td>{{amortizacion.tasa}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Saldo Capital</td>
                                <td>{{amortizacion.saldoCapital}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Nuevo Capital</td>
                                <td>{{amortizacion.nuevoCapital}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Último Vcto.</td>
                                <td>{{GetDate(amortizacion.ultimoVencimiento)}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Hoy</td>
                                <td>{{GetDate(amortizacion.hoy)}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Días Transcurridos</td>
                                <td>{{amortizacion.diasTranscurridos}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Factor</td>
                                <td>{{amortizacion.factor}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Intereses transcurridos</td>
                                <td>{{amortizacion.interesesTranscurridos}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">K + I</td>
                                <td>{{amortizacion.ki}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Amortización</td>
                                <td>{{amortizacion.nAmortizacion}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Capital</td>
                                <td>{{amortizacion.capital}}</td>
                            </tr>
                            <tr>
                                <td class="table-primary">Total</td>
                                <td>{{amortizacion.total}}</td>
                            </tr>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="modalMensaje" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Mensaje</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        {{mensaje}}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

        @section Scripts{

            <script>
                var vm = new Vue({
                    el: '#app',
                    data: {
                        amortizaciones: [],
                        api: "",
                        amortizacion: "",
                        mensaje:""
                    },
                    methods: {
                        CronogramaCOF: async function (index) {
                            this.buscandoCronogramaCOF = true;

                            await fetch(this.api + "Cronogramas/CronogramasPalanteExcel?codigo=" + vm.amortizaciones[index].nCodCred)
                                .then((transfer) => {
                                    return transfer.blob();
                                }).then((bytes) => {
                                    let elm = document.createElement('a');
                                    elm.href = URL.createObjectURL(bytes);
                                    elm.setAttribute('download', "Cronograma-" + vm.cronogramaCOF + ".xlsx");
                                    elm.click()
                                }).catch((error) => {
                                    console.log(error);
                                });

                            this.buscandoCronogramaCOF = false;
                        },
                        GetDate: function (strDate) {
                            return moment(strDate, "YYYYMMDD").format("DD-MM-YYYY");
                        },
                        confirmar: async function (index) {
                            if ((new Date(vm.amortizaciones[index].confirmacion)).getFullYear() != 1) {
                                this.mensaje = "Ya se confirmó y cambió el cronograma, no puede reconfirmarlo";
                                $("#modalMensaje").modal("show");
                                return;
                            }
                            else {
                                let repro = vm.amortizaciones[index];
                                repro.confirmacion = (new Date()).toISOString();
                                let res = await fetch(this.api + "Amortizacion/Save", {
                                    method: "POST",
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify(repro)
                                }).then(x => x.json());
                                location.href = '@(ViewBag.domain+ "Amortizaciones")';
                            }
                        },
                        eliminar: async function (index) {
                            if ((new Date(vm.amortizaciones[index].confirmacion)).getFullYear() != 1) {
                                this.mensaje = "Ya se confirmó y cambió el cronograma, no puede eliminarlo";
                                $("#modalMensaje").modal("show");
                                return;
                            } else {

                                var repro = vm.reprogramaciones[index];
                                let res = await fetch(this.api + "Amortizacion/Delete?input="+repro.reprogramacionID).then(x => x.json());
                                location.href = '@(ViewBag.domain+ "Amortizaciones")';
                            }
                        },
                        crear: function () {
                            location.href = '@(ViewBag.domain+ "Amortizaciones/Crear")';
                        }
                    },
                    computed: {
                    },
                    async mounted() {
                        this.api = $("#endpoint").val();
                        this.amortizaciones = await fetch(this.api + "Amortizacion/All").then(x => x.json());
                        console.log(this.amortizacion)
                    }
                });

            </script>

        }
