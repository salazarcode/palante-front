@{
    ViewData["Title"] = "Amortizar";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

    <div id="app">
        <input type="hidden" id="endpoint" name="endpoint" value="@ViewBag.endpoint" />

        <div class="container">
            <div class="row">
                <div class="col-md-8" style="max-height:450px;overflow-y:auto">
                    <div class="alert alert-warning"
                         role="alert"
                         v-if="credito == ''">
                        Debes buscar un crédito para ver sus datos...
                    </div>
                    <div id="accordion">
                        <div class="card">
                            <div class="card-header" id="headingOne">
                                <h5 class="mb-0">
                                    <button class="btn btn-link" data-toggle="collapse" data-target="#collapseZero" aria-expanded="true" aria-controls="collapseZero">
                                        Datos de crédito
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseZero" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                                <div class="card-body" style="font-size:10pt">
                                    <table v-if="credito != ''" class="table table-sm table-bordered table-hover" id="tableBusqueda">
                                        <thead>
                                            <tr>
                                                <th>Nro.</th>
                                                <th>Moneda</th>
                                                <th>Capital</th>
                                                <th>Precio</th>
                                                <th>Tasa</th>
                                                <th>Cuotas</th>
                                                <th>Vcto.</th>
                                                <th>Producto</th>
                                                <th>ID</th>
                                                <th>Nombre</th>
                                            </tr>
                                        </thead>
                                        <tbody id="main">
                                            <tr :id="credito.nCodCred">
                                                <td>{{credito.nCodCred}}</td>
                                                <td>{{Moneda(credito.nMoneda)}}</td>
                                                <td>{{formatMoney(credito.nPrestamo)}}</td>
                                                <td>{{credito.precio}}</td>
                                                <td>{{credito.nTasaComp}}</td>
                                                <td>{{credito.nNroCuotas}}</td>
                                                <td>{{fecha(credito.dFecVcto)}}</td>
                                                <td>{{credito.producto.cNomCod}}</td>
                                                <td>{{credito.dni != null ? 'DNI' : 'RUC'}} {{credito.dni != null ? credito.dni : credito.ruc}}</td>
                                                <td>{{credito.dni != null ? credito.nombres : credito.razonSocial}}</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-header" id="headingOne">
                                <h5 class="mb-0">
                                    <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        Último cronograma COF
                                    </button>
                                </h5>
                            </div>

                            <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                                <div class="card-body"  style="font-size:10pt">
                                    <table v-if="cronogramaFondeador.length != 0" class="table table-bordered table-sm table-hover">
                                        <tr>
                                            <th>#</th>
                                            <th>Fec. Vcto.</th>
                                            <th>Capital</th>
                                            <th>Interes</th>
                                            <th>P. Gracia</th>
                                            <th>Total</th>
                                            <th>Estado</th>
                                            <th>Pagada</th>
                                        </tr>
                                        <tr v-for="cuota in cronogramaFondeador[0].cuotas"
                                            :class="{ 'table-success' : cuota.nEstado ==  2  }">
                                            <td>{{cuota.numeroCuota}}</td>
                                            <td>{{cuota.fechaPago}}</td>
                                            <td>{{cuota.amortizacion}}</td>
                                            <td>{{cuota.interes}}</td>
                                            <td>{{cuota.periodoGracia}}</td>
                                            <td>{{cuota.totalCuota}}</td>
                                            <td :class="{ 'table-primary' : cuota.nEstadoCuota ==  1 , 'table-secondary' : cuota.nEstadoCuota ==  3  }">
                                                {{NEstadoCuota(cuota.nEstadoCuota)}}
                                            </td>
                                            <td :class="{ 'table-danger' : cuota.nEstado ==  0 }">
                                                {{NEstado(cuota.nEstado)}}
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-header" id="headingTwo">
                                <h5 class="mb-0">
                                    <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                        Cronograma Fondeador
                                    </button>
                                </h5>
                            </div>
                            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
                                <div class="card-body"  style="font-size:10pt">
                                    <table v-if="cronogramaPalante.length != 0" class="table table-bordered table-sm table-hover">
                                        <tr>
                                            <th>#</th>
                                            <th>Fec. Vcto.</th>
                                            <th>Capital</th>
                                            <th>Interes</th>
                                            <th>P. Gracia</th>
                                            <th>Total</th>
                                            <th>Estado</th>
                                            <th>Pagada</th>
                                        </tr>
                                        <tr v-for="cuota in cronogramaPalante[0].cuotas"
                                            :class="{ 'table-success' : cuota.nEstado ==  2  }">
                                            <td>{{cuota.numeroCuota}}</td>
                                            <td>{{fecha(cuota.fechaPago)}}</td>
                                            <td>{{cuota.amortizacion}}</td>
                                            <td>{{cuota.interes}}</td>
                                            <td>{{cuota.periodoGracia}}</td>
                                            <td>{{cuota.totalCuota}}</td>
                                            <td :class="{ 'table-primary' : cuota.nEstadoCuota ==  1 , 'table-secondary' : cuota.nEstadoCuota ==  3  }">
                                                {{NEstadoCuota(cuota.nEstadoCuota)}}
                                            </td>
                                            <td :class="{ 'table-danger' : cuota.nEstado ==  0 }">
                                                {{NEstado(cuota.nEstado)}}
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4"  style="font-size:10pt">
                    <div style="margin-bottom:10px">
                        <input type="text" name="codigo" v-model="codigo" class="form-control" style="margin-bottom:10px" @@keyup.enter="buscar" />
                        <button class="btn btn-primary btn-sm" style="margin-right:10px" @@click="buscar" :disabled="codigo == ''">Buscar</button>
                        <button class="btn btn-success btn-sm float-right" @@click="guardar" >Guardar</button>
                        <div class="spinner-border spinner-border-sm text-danger"
                             role="status"
                             v-if="buscarLoader">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div v-if="cronogramaFondeador.length != 0">
                        <div style="margin-bottom:10px">
                            <table class="table table-bordered table-hover table-sm">
                                <tr>
                                    <td class="table-primary">Tasa</td>
                                    <td>{{amortizacion.tasa.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Saldo Capital</td>
                                    <td>{{amortizacion.saldoCapital}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Nuevo Capital</td>
                                    <td>{{amortizacion.nuevoCapital.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Último Vcto.</td>
                                    <td>{{fecha(amortizacion.ultimoVencimiento)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Hoy</td>
                                    <td>{{fecha(amortizacion.hoy)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Días Transcurridos</td>
                                    <td>{{amortizacion.diasTranscurridos}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Factor</td>
                                    <td>{{amortizacion.factor.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Intereses transcurridos</td>
                                    <td>{{amortizacion.interesesTranscurridos.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">K + I</td>
                                    <td>{{amortizacion.ki.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Amortización</td>
                                    <td>{{amortizacion.amortizacion.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Capital</td>
                                    <td>{{amortizacion.capital.toFixed(2)}}</td>
                                </tr>
                                <tr>
                                    <td class="table-primary">Total</td>
                                    <td>{{amortizacion.total.toFixed(2)}}</td>
                                </tr>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

@section Scripts{

    <script>
        var vm = new Vue({
            el: '#app',
            data: {
                cronogramaPalante: [],
                cronogramaFondeador: [],
                credito: "",
                buscarLoader: false,
                alerta: false,
                mensaje: "Nada que decir",
                codigo: "",
                api: "",
                amortizacion: {
                    amortizacionID: 0,
                    tasa: 0,
                    saldoCapital: 0,
                    nuevoCapital: 0,
                    ultimoVencimiento: "",
                    hoy: new Date(),
                    diasTranscurridos: 0,
                    factor: 0,
                    interesesTranscurridos: 0,
                    ki: 0,
                    nAmortizacion: 0,
                    nCodCred: 0,
                    capital: 0,
                    total: 0,
                    nroCalendarioCOF: 1,
                    confirmacion: new Date("01-01-1900")
                }

            },
            methods: {
                guardar: async function (index) {
                    try {
                        let res = await fetch(this.api + "Amortizacion/Save", {
                            method: "POST",
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(vm.amortizacion)
                        }).then(x => x.json());
                    } catch (e) {
                        console.log(e)
                    }

                    location.href = '@(ViewBag.domain+ "Amortizaciones")';
                },
                buscar: async function () {
                    this.buscarLoader = true;

                    var formData = new FormData();
                    formData.append('Tipo', 'credito');
                    formData.append('Query', this.codigo);
                    formData.append('Fecha', (new Date()).toISOString());

                    let res = (await fetch(this.api + "Creditos/Search", {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.json()));

                    if (res.length != 0)
                        this.credito = res[0];

                    this.cronogramaPalante = await fetch(this.api + "Cronogramas/CronogramasPalante?codigo=" + this.codigo).then(x => x.json());
                    this.cronogramaFondeador = await fetch(this.api + "Cronogramas/CronogramasFondeador?codigo=" + this.codigo).then(x => x.json());

                    vm.amortizacion.tasa = vm.credito.nTasaComp;
                    vm.amortizacion.nCodCred = vm.credito.nCodCred;
                    vm.amortizacion.nroCalendarioCOF = vm.cronogramaFondeador[0].nNroCalendario;

                    vm.amortizacion.saldoCapital = this.round((vm.cronogramaFondeador[0].cuotas.filter(x => x.nEstado != 2).map(x => x.amortizacion).reduce((x, y) => parseFloat(x) + parseFloat(y))),2)

                    var date = vm.cronogramaFondeador[0].cuotas.filter(x => x.nEstadoCuota == 1 && x.nEstado == 0)[0].fechaPago.split("-")
                    vm.amortizacion.ultimoVencimiento = new Date(date[1] + "-" + date[0] + "-" + date[2]);
                    vm.amortizacion.diasTranscurridos = Math.round((new Date() - vm.amortizacion.ultimoVencimiento) / (1000 * 60 * 60 * 24));

                    vm.amortizacion.nuevoCapital = this.round((vm.cronogramaPalante[0].cuotas.map(x => x.amortizacion).reduce((x, y) => parseFloat(x) + parseFloat(y))),2)

                    //------------------------------------------------------------------------------------------------------------------------------------------
                    vm.amortizacion.factor = this.round((Math.pow(1 + parseFloat(vm.amortizacion.tasa), parseFloat(vm.amortizacion.diasTranscurridos) / 360) - 1),2);


                    vm.amortizacion.interesesTranscurridos = this.round((vm.amortizacion.factor * parseFloat(vm.amortizacion.saldoCapital)), 2);


                    vm.amortizacion.ki = this.round((parseFloat(vm.amortizacion.interesesTranscurridos) + parseFloat(vm.amortizacion.saldoCapital)),2);


                    vm.amortizacion.amortizacion = this.round((parseFloat(vm.amortizacion.ki) + parseFloat(vm.amortizacion.nuevoCapital)),2);

                    vm.amortizacion.capital = this.round((parseFloat(vm.amortizacion.amortizacion) - parseFloat(vm.amortizacion.interesesTranscurridos)),2)


                    vm.amortizacion.total = this.round((parseFloat(vm.amortizacion.capital) + parseFloat(vm.amortizacion.interesesTranscurridos)),2)

                    this.buscarLoader = false;
                },
                random: function (min, max) {
                    return Math.floor(Math.random() * max) + min;
                },

                round: function(value, decimals) {
                    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
                },

                NEstadoCuota: function (estadoCuota) {
                    switch (estadoCuota) {
                        case 1:
                            return "Vigente";
                        case 2:
                            return "Vencido";
                        case 3:
                            return "Por Vencer";
                    }
                },
                NEstado: function (estadoCuota) {
                    switch (estadoCuota) {
                        case 0:
                            return "Sin Pagar";
                        case 2:
                            return "Pagada";
                    }
                },
                formatMoney: function (num) {
                    return num.toFixed(2)
                },
                Moneda: function (moneda) {
                    switch (moneda) {
                        case 1:
                            return "S/";
                        case 2:
                            return "USD";
                    }
                },
                fecha: function (date) {
                    return moment(date).format("DD/MM/YYYY")
                }
            },
            async mounted() {
                this.api = $("#endpoint").val()
            }
        });

    </script>

}